name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 1️⃣ Build Docker image (basic check)
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag churn_app:latest

  # 2️⃣ Run Python tests
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Create dummy model artifact
        run: |
          python - <<'PY'
          import os, pickle
          os.makedirs('artifacts', exist_ok=True)
          class DummyModel:
              def predict(self, X):
                  try:
                      return [1]*len(X)  # always "Churn" for test
                  except Exception:
                      return [1]
          with open('artifacts/model.pkl','wb') as f:
              pickle.dump(DummyModel(), f)
          print("Dummy model written to artifacts/model.pkl")
          PY

      - name: Run pytest
        run: pytest -v

  # 3️⃣ Build & Push Docker image to Docker Hub
  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        id: docker_build   # <-- add id so we can reference outputs
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/churn-flask-app:latest

      - name: Image digest
        run: echo "${{ steps.docker_build.outputs.digest }}"
